--
-- database `g2smutation`
--
SET FOREIGN_KEY_CHECKS = 0;
drop table IF EXISTS pdb_seq_alignment;
drop table IF EXISTS uniprot_entry;
drop table IF EXISTS ensembl_entry;
drop table IF EXISTS pdb_entry;
drop table IF EXISTS seq_entry;
drop table IF EXISTS mutation_entry;
drop table IF EXISTS gpos_allmapping_entry;
drop table IF EXISTS gpos_protein_entry;
drop table IF EXISTS gpos_allmapping_pdb_entry;
drop table IF EXISTS mutation_usage_table;
drop table IF EXISTS mutation_location_entry;
drop table IF EXISTS structure_annotation_entry;
drop table IF EXISTS dbsnp_entry;
drop table IF EXISTS clinvar_entry;
drop table IF EXISTS cosmic_entry;
drop table IF EXISTS genie_entry;
drop table IF EXISTS tcga_entry;
drop table IF EXISTS update_record;
SET FOREIGN_KEY_CHECKS = 1;

CREATE TABLE `seq_entry`(
    `SEQ_ID` int(255) NOT NULL,
    `SEQENCE` text,
    PRIMARY KEY(`SEQ_ID`)
);
CREATE TABLE `uniprot_entry`(
    `UNIPROT_ID_ISO` VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
    `UNIPROT_ID` VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
    `NAME` VARCHAR(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
    `ISOFORM` VARCHAR(2) NOT NULL,
    `SEQ_ID` int(255),
    PRIMARY KEY(`UNIPROT_ID_ISO`),
    FOREIGN KEY(`SEQ_ID`) REFERENCES `seq_entry` (`SEQ_ID`)
);
CREATE TABLE `ensembl_entry` (
    `ENSEMBL_ID` VARCHAR(20) NOT NULL,
    `ENSEMBL_GENE` VARCHAR(20),
    `ENSEMBL_TRANSCRIPT` VARCHAR(20),
    `SEQ_ID` int(255),
    PRIMARY KEY(`ENSEMBL_ID`),
    FOREIGN KEY(`SEQ_ID`) REFERENCES `seq_entry` (`SEQ_ID`)
);
CREATE TABLE `pdb_entry` (
    `PDB_NO` VARCHAR(12) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
    `PDB_ID` VARCHAR(4) NOT NULL,
    `CHAIN` VARCHAR(4) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
    `PDB_SEG` VARCHAR(2) NOT NULL,
    `SEG_START` VARCHAR(4) NOT NULL,
    PRIMARY KEY(`PDB_NO`)
);
CREATE TABLE `pdb_seq_alignment` (
  `ALIGNMENT_ID` int NOT NULL AUTO_INCREMENT,
  `PDB_NO` VARCHAR(12) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `PDB_ID` VARCHAR(4) NOT NULL,
  `CHAIN` VARCHAR(4) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `PDB_SEG` VARCHAR(2) NOT NULL,
  `SEG_START` VARCHAR(4) NOT NULL,
  `SEQ_ID` int(255) NOT NULL,
  `PDB_FROM` int NOT NULL,
  `PDB_TO` int NOT NULL,
  `SEQ_FROM` int NOT NULL,
  `SEQ_TO` int NOT NULL,
  `EVALUE` double,
  `BITSCORE` float,
  `IDENTITY` float,
  `IDENTP` float,
  `SEQ_ALIGN` text,
  `PDB_ALIGN` text,
  `MIDLINE_ALIGN` text,
  `ALIGNLENGTH` int,
  `UPDATE_DATE` DATE,
  PRIMARY KEY (`ALIGNMENT_ID`),
  KEY(`SEQ_ID`),
  KEY(`PDB_ID`, `CHAIN`, `PDB_SEG`),
  FOREIGN KEY(`PDB_NO`) REFERENCES `pdb_entry` (`PDB_NO`),
  FOREIGN KEY(`SEQ_ID`) REFERENCES `seq_entry` (`SEQ_ID`)
);
CREATE TABLE `mutation_entry` (
  `MUTATION_ID` int NOT NULL AUTO_INCREMENT,
  `MUTATION_NO` VARCHAR(50) NOT NULL,
  `SEQ_ID` int(255) NOT NULL,
  `SEQ_NAME` text,
  `SEQ_INDEX` int NOT NULL,
  `SEQ_RESIDUE` VARCHAR(1) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `PDB_NO` VARCHAR(12) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `PDB_INDEX` int NOT NULL,
  `PDB_RESIDUE` VARCHAR(1) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ALIGNMENT_ID` int NOT NULL,
  PRIMARY KEY(`MUTATION_ID`),
  KEY(`MUTATION_NO`,`SEQ_ID`,`PDB_NO`,`ALIGNMENT_ID`),
  FOREIGN KEY(`SEQ_ID`) REFERENCES `seq_entry` (`SEQ_ID`),
  FOREIGN KEY(`PDB_NO`) REFERENCES `pdb_entry` (`PDB_NO`),
  FOREIGN KEY(`ALIGNMENT_ID`) REFERENCES `pdb_seq_alignment` (`ALIGNMENT_ID`)
);

-- Build only when Init
CREATE TABLE `gpos_allmapping_entry` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `CHR_POS` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL, -- CHR_POSSTART
  `DBSNP_ID` VARCHAR(255) default '',
  `CLINVAR_ID` VARCHAR(255) default '',
  `COSMIC_ID` VARCHAR(255) default '',
  `GENIE_ID` VARCHAR(255) default '',
  `TCGA_ID` VARCHAR(255) default '',
  PRIMARY KEY(`ID`),
  KEY(`CHR_POS`,`DBSNP_ID`,`CLINVAR_ID`,`COSMIC_ID`,`GENIE_ID`,`TCGA_ID`)
);

-- Build only when Init
CREATE TABLE `gpos_protein_entry` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `CHR_POS` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL, -- CHR_POSSTART
  `MUTATION_NO` VARCHAR(50) NOT NULL, -- same as MUTATION_NO in table mutation_usage_table: SEQID_INDEX
  `SEQ_ID` int NOT NULL,
  `SEQ_INDEX` int NOT NULL,
  PRIMARY KEY(`ID`),
  KEY(`CHR_POS`,`MUTATION_NO`,`SEQ_ID`),
  FOREIGN KEY(`SEQ_ID`) REFERENCES `seq_entry` (`SEQ_ID`) 
);

CREATE TABLE `update_record` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `UPDATE_DATE` DATE,
  `SEG_NUM` int,
  `PDB_NUM` int,
  `ALIGNMENT_NUM` int,
  `DBSNP_NUM` int,
  `CLINVAR_NUM` int,
  `COSMIC_NUM` int,
  `GENIE_NUM` int,
  `TCGA_NUM` int,
  `DBSNP_NUM_UNIQUE` int,
  `CLINVAR_NUM_UNIQUE` int,
  `COSMIC_NUM_UNIQUE` int,
  `GENIE_NUM_UNIQUE` int,
  `TCGA_NUM_UNIQUE` int,
  `DBSNP_MAPPING_NUM` int,
  `CLINVAR_MAPPING_NUM` int,
  `COSMIC_MAPPING_NUM` int,
  `GENIE_MAPPING_NUM` int,
  `TCGA_MAPPING_NUM` int, 
  `MUTATION_LOCATION_NUM_WHOLE` int,
  `MUTATION_LOCATION_NUM_ALL` int, 
  `MUTATION_LOCATION_NUM` int,
  `A2R` int,
  `A2N` int,
  `A2D` int,
  `A2C` int,
  `A2Q` int,
  `A2E` int,
  `A2G` int,
  `A2H` int,
  `A2I` int,
  `A2L` int,
  `A2K` int,
  `A2M` int,
  `A2F` int,
  `A2P` int,
  `A2S` int,
  `A2T` int,
  `A2W` int,
  `A2Y` int,
  `A2V` int,
  `R2N` int,
  `R2D` int,
  `R2C` int,
  `R2Q` int,
  `R2E` int,
  `R2G` int,
  `R2H` int,
  `R2I` int,
  `R2L` int,
  `R2K` int,
  `R2M` int,
  `R2F` int,
  `R2P` int,
  `R2S` int,
  `R2T` int,
  `R2W` int,
  `R2Y` int,
  `R2V` int,
  `N2D` int,
  `N2C` int,
  `N2Q` int,
  `N2E` int,
  `N2G` int,
  `N2H` int,
  `N2I` int,
  `N2L` int,
  `N2K` int,
  `N2M` int,
  `N2F` int,
  `N2P` int,
  `N2S` int,
  `N2T` int,
  `N2W` int,
  `N2Y` int,
  `N2V` int,
  `D2C` int,
  `D2Q` int,
  `D2E` int,
  `D2G` int,
  `D2H` int,
  `D2I` int,
  `D2L` int,
  `D2K` int,
  `D2M` int,
  `D2F` int,
  `D2P` int,
  `D2S` int,
  `D2T` int,
  `D2W` int,
  `D2Y` int,
  `D2V` int,
  `C2Q` int,
  `C2E` int,
  `C2G` int,
  `C2H` int,
  `C2I` int,
  `C2L` int,
  `C2K` int,
  `C2M` int,
  `C2F` int,
  `C2P` int,
  `C2S` int,
  `C2T` int,
  `C2W` int,
  `C2Y` int,
  `C2V` int,
  `Q2E` int,
  `Q2G` int,
  `Q2H` int,
  `Q2I` int,
  `Q2L` int,
  `Q2K` int,
  `Q2M` int,
  `Q2F` int,
  `Q2P` int,
  `Q2S` int,
  `Q2T` int,
  `Q2W` int,
  `Q2Y` int,
  `Q2V` int,
  `E2G` int,
  `E2H` int,
  `E2I` int,
  `E2L` int,
  `E2K` int,
  `E2M` int,
  `E2F` int,
  `E2P` int,
  `E2S` int,
  `E2T` int,
  `E2W` int,
  `E2Y` int,
  `E2V` int,
  `G2H` int,
  `G2I` int,
  `G2L` int,
  `G2K` int,
  `G2M` int,
  `G2F` int,
  `G2P` int,
  `G2S` int,
  `G2T` int,
  `G2W` int,
  `G2Y` int,
  `G2V` int,
  `H2I` int,
  `H2L` int,
  `H2K` int,
  `H2M` int,
  `H2F` int,
  `H2P` int,
  `H2S` int,
  `H2T` int,
  `H2W` int,
  `H2Y` int,
  `H2V` int,
  `I2L` int,
  `I2K` int,
  `I2M` int,
  `I2F` int,
  `I2P` int,
  `I2S` int,
  `I2T` int,
  `I2W` int,
  `I2Y` int,
  `I2V` int,
  `L2K` int,
  `L2M` int,
  `L2F` int,
  `L2P` int,
  `L2S` int,
  `L2T` int,
  `L2W` int,
  `L2Y` int,
  `L2V` int,
  `K2M` int,
  `K2F` int,
  `K2P` int,
  `K2S` int,
  `K2T` int,
  `K2W` int,
  `K2Y` int,
  `K2V` int,
  `M2F` int,
  `M2P` int,
  `M2S` int,
  `M2T` int,
  `M2W` int,
  `M2Y` int,
  `M2V` int,
  `F2P` int,
  `F2S` int,
  `F2T` int,
  `F2W` int,
  `F2Y` int,
  `F2V` int,
  `P2S` int,
  `P2T` int,
  `P2W` int,
  `P2Y` int,
  `P2V` int,
  `S2T` int,
  `S2W` int,
  `S2Y` int,
  `S2V` int,
  `T2W` int,
  `T2Y` int,
  `T2V` int,
  `W2Y` int,
  `W2V` int,
  `Y2V` int,
  PRIMARY KEY(`ID`)
);

